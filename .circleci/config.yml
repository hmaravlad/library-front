version: 2.1

jobs:
  build-test:
    working_directory: ~/a-library-front
    docker:
      - image: cimg/node:12.14.1
    steps:
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
      - run: 
          name: "Install and update webdriver"
          command: npm install -g webdriver-manager && webdriver-manager update
      - run: 
          name: "Start webdriver"
          background: true
          command: webdriver start
      - run: 
          name: "Build the client"
          command: npm run build
      - run: 
          name: "Start client"
          background: true
          command: npm install && npm start
      - run:
          name: "Run the tests"
          command: |
              npm run test
      - save_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - 'node_modules'
  deploy:
    working_directory: ~/a-library-front
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run:
          name: Deploy to Docker Cloud
          command: |
            docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
            docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/a-library-front/a-library-front .
            docker push registry.heroku.com/a-library-front/a-library-front
            apt-get update && apt-get install curl
            curl -X PATCH https://api.heroku.com/apps/a-library-front/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
workflows:
  build:
    jobs:
      - build-test:
          filters:
            branches:
              ignore:
                - main
                - dev
  build-deploy-prod:
    jobs:
      - build-test:
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
