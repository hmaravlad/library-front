version: 2.1

orbs:
  lambda-tunnel: lambdatest/lambda-tunnel@1.0.4

jobs:
  build:
    working_directory: ~/a-library-front
    docker:
      - image: cimg/node:12.14.1
    steps:
      - checkout
      - lambda-tunnel/open_tunnel:
          tunnel_name: chrome
          lambdatest_email: hmara.vladislav2@gmail.com
          lambdatest_key: LT_KEY
      - run:
          name: "Install OpenJDK 11"
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
      - run: 
          name: "Install and update webdriver"
          command: sudo npm install -g webdriver-manager && sudo webdriver-manager update
      - run: 
          name: "Start webdriver"
          background: true
          command: sudo webdriver-manager start
      - run: 
          name: "Build the client"
          command: npm install && npm run build
      - run: 
          name: "Start client"
          background: true
          command: npm start
      - run: sleep 10;
      - run:
          name: "Run the tests"
          command: |
              npm run test
  deploy:
    working_directory: ~/a-library-front
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run:
          name: Deploy to Docker Cloud
          command: |
            docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
            docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/a-library-front/a-library-front .
            docker push registry.heroku.com/a-library-front/a-library-front
            apt-get update && apt-get install curl
            curl -X PATCH https://api.heroku.com/apps/a-library-front/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - main
                - dev
  build-deploy-prod:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
